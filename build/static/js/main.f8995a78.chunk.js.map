{"version":3,"sources":["component/Accordian.js","component/Navbar.js","component/Textform.js","component/Alert.js","App.js","index.js"],"names":["Accordian","props","className","style","color","theme","class","id","type","Navbar","to","title","href","role","onClick","ch","htmlFor","Textform","useState","text","setText","heading","name","cols","value","onChange","event","console","log","target","rows","backgroundColor","s","toUpperCase","alert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","length","Alert","word","lower","charAt","slice","capitalize","msg","App","mode","setmode","setalert","showalert","message","setTimeout","body","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.f8995a78.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Accordian(props) {\r\n\r\n    /*const [mystyle,setmystyle]=useState(\r\n    {\r\n        color: 'white',\r\n        backgroundColor:'black'\r\n    })\r\n\r\n    const [btnname,setbtnname]=useState('convert to white')\r\n\r\n    const themechange=()=>\r\n    {\r\n        if(mystyle.color==='white')\r\n        {\r\n            setmystyle({\r\n                color :'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setbtnname('convert to dark')\r\n        }\r\n        else{\r\n            setmystyle({\r\n                color :'white',\r\n                backgroundColor:'black'\r\n            })\r\n            setbtnname('convert to white')\r\n        }\r\n    }*/\r\n\r\n    return (\r\n        <div className=\"container\"  style={{color :props.theme===\"dark\" ? \"white\":\"black\"}}>\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n        <div class=\"accordion-item\" >\r\n          <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button  class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\"  >\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n            <button class=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" >\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingThree\">\r\n            <button class=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" >\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n              </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n               <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">about</Link>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Contact us\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div className={`form-check form-switch text-${props.theme===\"light\" ? \"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.ch} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">dark theme</label>\r\n</div>\r\n</nav>\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes=\r\n{\r\n    title: PropTypes.string,\r\n}\r\n\r\n\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n  const toupper = ()=>{\r\n    console.log(\"button was clicked\");\r\n    const s=text.toUpperCase();\r\n    setText(s);\r\n    props.alert(\"converted to uppercase\",\"success\");\r\n  }\r\n\r\n  const tolower = ()=>{\r\n    console.log(\"button was clicked\");\r\n    const s=text.toLowerCase();\r\n    setText(s);\r\n    props.alert(\"converted to lowercase\",\"success\");\r\n  }\r\n\r\n\r\n  const handlechange = (event)=>{//used to write into textarea\r\n    console.log(\"key entered\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handlecopy=()=>{//copy text to clipboard\r\n    var s=document.getElementById(\"text\");\r\n    s.select();\r\n    navigator.clipboard.writeText(s.value);\r\n    props.alert(\"textcopied to clipboard\",\"success\");\r\n  }\r\n\r\n  const handlespaces=()=>{// used to trim spaces \r\n    var newtext=text.split(/[ ]+/);//using regex\r\n    setText(newtext.join(\" \"));\r\n    props.alert(\"extraspaces are removed\",\"success\");\r\n  }\r\n\r\n  const [text,setText]=useState('');\r\n  //setText='hello';\r\n    return (\r\n      <>\r\n      <div  style={{color :props.theme===\"dark\" ? \"white\":\"black\"}}>\r\n        <div className=\"container\">\r\n            <h5 >{props.heading}</h5>\r\n            <div className=\"mb-3\">\r\n            <textarea name=\"text\" id=\"text\" cols=\"100\" value= {text} onChange={handlechange} rows=\"10\"  style={{backgroundColor :props.theme==='dark' ? \"#3a2856\":\"white\",color :props.theme===\"dark\" ? \"white\":\"black\"}}></textarea>\r\n            </div>\r\n            <button type=\"submit\" onClick={toupper} className=\"btn btn-primary mx-2\">convert to uppercase</button>\r\n            <button type=\"submit\" onClick={tolower} className=\"btn btn-primary mx-2\">convert to lowercase</button>\r\n            <button type=\"submit\" onClick={handlecopy} className=\"btn btn-primary mx-2\">copy</button>\r\n            <button type=\"submit\" onClick={handlespaces} className=\"btn btn-primary mx-2\">trim spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>summery of the text :</h2>\r\n            <p>{text.length===0 ? 0 : text.split(\" \").length} words {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return(lower.charAt(0).toUpperCase()+lower.slice(1));\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg} \r\n            </div>\r\n        \r\n    )\r\n}\r\n","\nimport './App.css';\nimport Accordian from './component/Accordian';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\nimport Alert from './component/Alert';\nimport { useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n\n  const change=()=>{\n    if(mode===\"light\")\n    {\n      setmode(\"dark\");\n      document.body.style.backgroundColor='#3a2856';\n      showalert(\"dark mode is enabled\",\"success\");\n      document.title='TextUtils-Dark Mode';\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor='white';\n      showalert(\"light mode is enabled\",\"success\");\n      document.title='TextUtils-Light Mode';\n    }\n  }\nconst [alert, setalert] = useState(null);\n\n\nconst showalert =(message,type)=>{\n  setalert({\n    msg: message,\n    type:type\n  })\n  setTimeout(() => {\n    setalert(null);\n  }, 800);\n}\n\n  return (\n   <>\n   <Router>\n   <Navbar title=\"home\" theme={mode}  ch={change}/>\n   <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/about\">\n            <Accordian/>\n          </Route>\n          <Route exact path=\"/\">\n            <Textform heading=\"enter text hear:\"   theme={mode} alert={showalert} />\n          </Route>\n        </Switch>\n    </Router>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}